<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/spring-mvc.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--导入属性文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <!--扫描所有的组件，除了控制器全部扫描-->
    <context:component-scan base-package="com.integrate.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- spring的配置，数据源，事物控制 -->
    <bean  id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- ============================配置和mybatis整合==========================-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--名字不一直就可以使用这中方式-->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
    </bean>

    <!-- 可以进行批量的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>


   <!-- 扫描所有的mapper接口-->
    <mybatis:scan base-package="com.integrate.ssm.dao.mapper"></mybatis:scan>
<!--======================================================================-->

    <!--配置事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启事务注解-->
    <!--<tx:annotation-driven/>-->
    <!--开启事物的注解，使用xml配置形式的事物，(必要主要的都是使用配置式)-->
   <aop:config>
      <!-- 配置切入点表达式  com.integrate.ssm.service中的包下的所有的包下的所有的方法，无论多少个参数-->
       <aop:pointcut id="txPoint" expression="execution(* com.integrate.ssm.service..*(..))"/>
       <!--配置事务增强,切入哪些方法-->
       <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
   </aop:config>
    <!--配置事务增强，事务如何切入transaction-manager="transactionManager" 默认，可以不用配置，如果不一样就一定要写 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
           <!-- 所有的方法都是事务方法 -->
            <tx:method name="*"/>
            <!--get开头的所有方法-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
</beans>